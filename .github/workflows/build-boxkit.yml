name: build-boxkit
on:
  workflow_dispatch: # allow manually triggering builds
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths-ignore: # don't rebuild on documentation change
      - '**.md'
  # schedule:
  #   - cron: '0 0 * * TUE'

env:
    IMAGE_TAGS: latest
    LATEST_VER: "6.1.0"
    IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  push-ghcr:
    name: Build and push image
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        containerfile:
          - omnetpp-toolbox
    steps:
      # Clone code to runner
      - name: Checkout
        uses: actions/checkout@v4

      # Build metadata
      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ matrix.containerfile }}
          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/gbrsni/omnetpp-toolbox/main/README.md

      # Build image using Buildah action
      - name: Build latest Image
        id: build_image_latest
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./ContainerFiles/${{ matrix.containerfile }}
          image: ${{ matrix.containerfile }}
          tags: ${{ env.IMAGE_TAGS }} ${{ env.LATEST_VER }}
          labels: ${{ steps.meta.outputs.labels }}
          oci: false
          build-args: |
            VERSION=${{ env.LATEST_VER }}

      - name: Build 6.0.3 Image
        id: build_image_6_0_3
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./ContainerFiles/${{ matrix.containerfile }}
          image: ${{ matrix.containerfile }}
          tags: "6.0.3"
          labels: ${{ steps.meta.outputs.labels }}
          oci: false
          build-args: |
            VERSION=6.0.3
          
      # Workaround bug where capital letters in your GitHub username make it impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      # Push latest image to GHCR (Image Registry)
      - name: Push latest To GHCR
        uses: redhat-actions/push-to-registry@v2
        if: github.event_name != 'pull_request'
        id: push_latest
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build_image_latest.outputs.image }}
          tags: ${{ steps.build_image_latest.outputs.tags }}
          registry: ${{ steps.registry_case.outputs.lowercase }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      # Push 6.0.3 to GHCR (Image Registry)
      - name: Push 6.0.3 To GHCR
        uses: redhat-actions/push-to-registry@v2
        if: github.event_name != 'pull_request'
        id: push_6_0_3
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build_image_6_0_3.outputs.image }}
          tags: ${{ steps.build_image_6_0_3.outputs.tags }}
          registry: ${{ steps.registry_case.outputs.lowercase }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
            
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
            
      # Sign container
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.8.2

      - name: Sign latest container image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ steps.registry_case.outputs.lowercase }}/${{ matrix.containerfile }}@${TAGS}
        env:
          TAGS: ${{ steps.push_latest.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}

      - name: Sign 6.0.3 container image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ steps.registry_case.outputs.lowercase }}/${{ matrix.containerfile }}@${TAGS}
        env:
          TAGS: ${{ steps.push_6_0_3.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push_latest.outputs) }}"
          echo "${{ toJSON(steps.push_6_0_3.outputs) }}"
